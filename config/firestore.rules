rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Règles pour la collection apiculteurs
    match /apiculteurs/{apiculteurId} {
      // Permettre la lecture pour vérifier l'existence d'un utilisateur (pour l'authentification)
      allow read: if request.auth != null || 
        (request.method == 'get' && 
         request.path.segments[-1] == 'apiculteurs');
      
      // Permettre l'écriture pour les utilisateurs authentifiés
      allow write: if request.auth != null && request.auth.uid == apiculteurId;
    }
    
    // Règles pour la collection ruchers
    match /ruchers/{rucherId} {
      allow read, write: if request.auth != null && 
        (resource.data.idApiculteur == request.auth.uid || 
         request.auth.token.email == 'admin@beetrackdemo.com');
    }
    
    // Règles pour la collection ruches
    match /ruches/{rucheId} {
      allow read, write: if request.auth != null && 
        (resource.data.idApiculteur == request.auth.uid || 
         request.auth.token.email == 'admin@beetrackdemo.com');
    }
    
    // Règles pour la collection donneesCapteurs
    match /donneesCapteurs/{donneeId} {
      allow read, write: if request.auth != null && 
        (resource.data.idApiculteur == request.auth.uid || 
         request.auth.token.email == 'admin@beetrackdemo.com');
    }
    
    // Règles temporaires pour le développement (à supprimer en production)
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
  }
} 