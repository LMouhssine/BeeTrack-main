name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  flutter-test:
    name: Test Flutter Application
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./mobile-app
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.0'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .
      
      - name: Analyze project source
        run: flutter analyze
      
      - name: Run tests
        run: flutter test

  spring-boot-build:
    name: Build Spring Boot Application
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web-app
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      
      - name: Build with Maven
        run: mvn -B package --file pom.xml -DskipTests
      
      - name: Run tests
        run: mvn test
      
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ruche-connectee-backend
          path: web-app/target/*.jar

  esp32-check:
    name: Verify ESP32 Code
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v1
      
      - name: Install ESP32 platform
        run: |
          arduino-cli core update-index
          arduino-cli core install esp32:esp32
      
      - name: Install required libraries
        run: |
          arduino-cli lib install "DHT sensor library"
          arduino-cli lib install "Firebase ESP32 Client"
          arduino-cli lib install "ArduinoJson"
      
      - name: Create dummy secrets file
        run: |
          echo '#define WIFI_SSID "dummy_ssid"' > esp32-code/secrets.h
          echo '#define WIFI_PASSWORD "dummy_password"' >> esp32-code/secrets.h
          echo '#define FIREBASE_HOST "dummy.firebaseio.com"' >> esp32-code/secrets.h
          echo '#define FIREBASE_AUTH "dummy_auth"' >> esp32-code/secrets.h
      
      - name: Verify ESP32 code
        run: arduino-cli compile --fqbn esp32:esp32:esp32 esp32-code/ruche_iot.ino --verify